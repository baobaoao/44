#include<reg51.h>
#include<intrins.h>
#include<stdlib.h>
#include<string.h>
#include<stdio.h>
#define INT8U unsigned char
#define INT16U unsigned int

char strarr[]="123456789ABCDEFGHI";
//char char8[]={0x1F,0x11,0x11,0x1F,0x11,0x11,0x1F,0x00};
char char8[][8]={
	{0x08,0x0F,0x1A,0x0F,0x0A,0x1F,0x02,0x00},  //年 对应的字模编码
	{0x0F,0x09,0x0F,0x09,0x0F,0x09,0x13,0x00},  //月 对应的字模编码
	{0x1F,0x11,0x11,0x1F,0x11,0x11,0x1F,0x00}		//日 对应的字模编码
};

//LCD1602 一行可以显示16个字符，一共有两行
//D0～D7为8位双向数据端
sbit RS=P2^0;  // RS为寄存器选择，高电平1时选择数据寄存器（R）、低电平0时选择指令寄存器(S)
sbit RW=P2^1;  //RW为读写信号线，高电平(1)时进行读操作(R),低电平(0)时进行写操作(W)
sbit EN=P2^2;  //E(或EN)端为使能(enable)端,高电平（1）时读取信息，负跳变(高电平变为低电平)时执行指令。

//对应可转动开关 的四个开关
sbit K1=P3^0;
sbit K2=P3^1;
sbit K3=P3^2;
sbit K4=P3^3;

//延迟 x mS 
//INT16U 数值范围 0 ~ 2^16=1024*64 ，INT8U 数值范围 0 ~ 2^8=128  
void delay_ms(INT16U x)
{
	INT8U i;
	while(x--)
	{
		for(i=0;i<120;i++);
	}
}

//忙等待    读/写都是要时间的，遇到正在读/写就等待
void Busy_Wait()
{
	INT8U LCD_status=0;
	do
	{
		P0=0xFF;  //总线电压拉高，检测LCD_status
		EN=0;
		RS=0;
		RW=1;
	
		// EN=1 --> EN=0  负跳变，执行命令
		EN=1;
		LCD_status=P0;  //位置别放到EN=1前
		_nop_();
		EN=0;
	}while(LCD_status&0x80); //1000 0000  
}

//根据字符的位置dat写入对应的字符  (1602学习资料/LCD1602中文资料.pdf   有一张表记录每个字符对应的位置)
void Write_LCD_Data(INT8U dat)
{
	Busy_Wait();
	EN=0;
	RS=1;
	RW=0;
	
	P0=dat;
	EN=1;
	_nop_();
	EN=0;
}

//定义写入字符的位置
void Write_LCD_CMD(INT8U cmddata)
{
	Busy_Wait();
	EN=0;
	RS=0;
	RW=0;
	P0=cmddata;
	EN=1;
	_nop_();
	EN=0;
}
//从第rownum行、第columenum列，显示字符串str
void Display_String(INT8U rownum,INT8U columenum,char *str)
{
	INT8U i=0;
	//它的最高位固定为1，剩下7位由上表确定。比如剩下7位为40H的时候，就表示在1602的第2行第1个空格显示。
	//当剩下7位为4FH的时候就表示在第2行的第16个空格显示
	INT8U code DDRAM[]={0x80,0xC0};  //  1000 0000   第1行,   1100 0000    第2行
	Write_LCD_CMD(DDRAM[rownum]|columenum);  
	for(i=0;i<16&&str[i];i++)
	{
		Write_LCD_Data(str[i]);
	}
	for(;i<16;i++)//???
	{
		Write_LCD_Data(' ');
	}
}
//初始化LCD1602
void initialize_LCD()
{
	//功能设置命令 DL：高电平时为 4 位总线，低电平时为 8 位总线
	//N：低电平时为单行显示，高电平时双行显示 
	//F: 低电平时显示 5x7 的 点阵字符，高电平时显示 5x10 的点阵字符 （
	//有些模块是 DL：高电平时 为 8 位总线，低电平时为 4 位总线
	Write_LCD_CMD(0x38); //0011 1000		置功能 001(DL) (N)(F)**       4 位总线  双行显示  5x7的点阵字符
	
	//指令 4：显示开关控制。 D：控制整体显示的开与关，高电平表示开显示，低电平表示关显示 
	//C：控制光标的开与关，高电平表示有光标，低电平表示无光标 
	//B：控制光标是否闪烁，高电平闪烁，低电平不闪烁
	Write_LCD_CMD(0x0c); //0000 1100		显示开/关控制 0000 1(D)(C)(B)   开显示  无光标  光标不闪烁
}
//滚动显示字符
void Scroll_Display()
{
	int i;
	for(i=0;i<strlen(strarr);i++)
	{
		Display_String(0,0,strarr+i);
		if(K1)
			return;
		delay_ms(1000);
	}
}

//显示 随机的加法算数
void Random_Display_Char()
{
	int i=0;
	char buff_char[17]="";
	int a=0,b=0; 
	initialize_LCD();
	
	while(1)
	{
		a=rand()%100;
		b=rand()%100;
		sprintf(buff_char,"%d+%d=%d",a,b,a+b);  // 把字符串"%d+%d=%d"写入字符数组buff_cha
		Write_LCD_CMD(0x80); // 1000 0000 从第0行第0列开始写入，定义写的位置
		Write_LCD_CMD(0x0F); // 0000 1111 开显示  有光标  光标闪烁
		for(i=0;i<16;i++)  //逐个字符写入，显示
		{
			if(buff_char[i])
				Write_LCD_Data(buff_char[i]);
			else
				Write_LCD_Data(' ');
			if(K2)
				return;
			delay_ms(100);
		}
		delay_ms(200);
		Display_String(0,0,"                ");
	}
}

//显示字库里的所有字符
void Display_All_Char()
{
	int i=0,j=0;
	initialize_LCD();
	while(1)
	{
		Write_LCD_CMD(0x80);
		Write_LCD_CMD(0x0F);
		for(i=0x20,j=0;i!=0x00;i++)  //0xFF +1 溢出，为0x00
		{
			if(i>=0x80&&i<=0x9F) //这个区域没有字符
				continue;
			Write_LCD_Data(i);
			j++;
			if(j%16==0)
			{
				Display_String(0,0,"                ");
				Write_LCD_CMD(0x80);
			}
			if(K3)
				return ;
			delay_ms(100);
		}
		delay_ms(200);
		Display_String(0,0,"                ");
	}
}

//在0x00位置起 定制自定义的字符
void Input_Charnum(char char8[][8],INT8U n)
{
	INT8U i=0,j=0;
	Write_LCD_CMD(0x40);// 置字符发生存贮器地址  001(字符发生存贮器地址（AGG）)   这里指定的位置是0x00
	for(i=0;i<n;i++)
	{
		for(j=0;j<8;j++)
		{
			Write_LCD_Data(char8[i][j]);
		}
	}
}

//显示自定义的字符
void Display_Custom_Char()
{
	int i=0,j=0;
	initialize_LCD();
	Input_Charnum(char8,3); 
	while(1)
	{
		Display_String(0,0,"LCD1602 DEMO4");
		Write_LCD_CMD(0xC0);
		for(i=0;i<16;i++)
		{
			Write_LCD_Data(j);// 怎么成功调用到 “年 月 日”???  Input_Charnum(char8,3)的字符从0x00开始写入，
			//这三个字符分别在 0x00,0x01,0x02 对应了 j=0,1,2
			Write_LCD_Data(' ');
			j++;
			if(j>=3)
				j=0;
			delay_ms(100);
			if(K4)
				return;
		}
		delay_ms(200);
		Display_String(1,0,"                ");
	}
}

main()
{
	
	initialize_LCD();
	while(1)
	{
		if(K1==0)
			Scroll_Display();
			Display_String(0,0,"                ");// 16个空格 清屏
		if(K2==0)
			Random_Display_Char();
			Display_String(0,0,"                ");
		if(K3==0)
			Display_All_Char();
			Display_String(0,0,"                ");
		if(K4==0)
			Display_Custom_Char();
			Display_String(0,0,"                ");
			Display_String(1,0,"                ");
	}
}

